@model Post

@{
    ViewBag.Title = Model.Title;
    ViewBag.Describe = Model.Desciption;
    ViewBag.Keywords = $"{Model.Tags?.Replace(",", " ")} {Model.Category?.Name}";
    var base_path = Context.Request.PathBase;
}
@*<h2>@Model.Title</h2>

    @if (!String.IsNullOrEmpty(Model.CoverImagePath))
    {
        var image_path = $"{base_path}/Image/{Model.CoverImagePath}";
        <img src="@image_path" />
    }
    <div>
        @Html.Raw(Model.Content)
    </div>*@
<div class="container">
    @if (!String.IsNullOrEmpty(Model.CoverImagePath))
    {
        <div class="post-cover-image">
            @{
                var image_path = $"{base_path}/Image/{Model.CoverImagePath}";
            }
            <img src="@image_path" />
            <span class="title">@Model.Title</span>
        </div>
    }
    else
    {
        <p class="title-without-img">@Model.Title</p>
    }
    <div class="post-body">
        @Html.Raw(Model.Content)
    </div>
</div>

@if (User.Identity.IsAuthenticated)
{
    <div class="container">
    @{
        await Html.RenderPartialAsync("_Comment", new CommentViewModel { PostId = Model.Id, ParentCommentId = 0 });
    }
    @foreach (var c in Model.Comments.Where(c => c.ParentCommentId == 0))
    {
        @await Component.InvokeAsync("Comment", new CommentViewModel { PostId=c.PostId, Id = c.Id, Created = c.Created, Message = c.Message, ParentCommentId = 0, Username = c.Username })
    }
</div>
}
else
{
    <div>
        <a asp-action="Login" asp-controller="Auth">Sign In to view comments</a>
    </div>
}
